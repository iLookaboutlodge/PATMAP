using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using CGIS.MapTools;
using CGIS.MapTools.MapGuide6_5;

public partial class BoundaryAdjustmentMapGenerator : BoundaryChangeBasePage
{
    protected void Page_Load(object sender, EventArgs e)
    {
        try
        {
            IMap map = MapManager.getBoundaryAdjustmentMap();

            this.Response.ClearContent();
            this.Response.ClearHeaders();

            try
            {
                //Stream the doc out to the client
                //Clean up headers and such to prevent errors in HTTPS
                Byte[] docArray = ((MapMG6_5)map).getMapStream();
                this.Response.AddHeader("Accept-Header", docArray.Length.ToString());
                this.Response.AddHeader("Content-Length", docArray.Length.ToString());
                this.Response.AddHeader("Accept-Ranges", "bytes");
                this.Response.ContentType = "application/x-mwf";
                this.Response.BinaryWrite(docArray);
            }
            catch (Exception ex)
            {
                this.Response.Write("Map load failed.<br>");
                this.Response.Write(ex);
            }


            //Stop all other processing and send only the map
            this.Response.End();
        }
        catch (System.Threading.ThreadAbortException)
        {
            //Ignore this exception as it is generated by Response.End and will be rethrown
        }
        catch (Exception ex)
        {
            this.Response.ClearContent();
            this.Response.ClearHeaders();
            this.Response.Write("Error obtaining map: " + ex.ToString());
            this.Response.End();
        }
    }
}
